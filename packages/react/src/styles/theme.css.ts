/**
 * Theme integration with Style Dictionary generated tokens
 * This file defines CSS variables that correspond to the tokens generated by Style Dictionary
 *
 * IMPORTANT: These CSS variables are populated by @ras-ui/tokens CSS.
 * The actual values come from Style Dictionary and switch based on data-theme attribute.
 */

// Theme object using CSS custom properties from Style Dictionary
export const theme = {
  color: {
    // Semantic colors (theme-aware via CSS custom properties)
    surface: {
      base: "var(--color-semantic-surface-base)",
      raised: "var(--color-semantic-surface-raised)",
      float: "var(--color-semantic-surface-float)",
    },
    text: {
      primary: "var(--color-semantic-text-primary)",
      secondary: "var(--color-semantic-text-secondary)",
      onBrand: "var(--color-semantic-text-on-brand)",
    },
    border: {
      default: "var(--color-semantic-border-default)",
      focus: "var(--color-semantic-border-focus)",
    },
    brand: {
      primary: "var(--color-brand-primary)",
    },
    danger: "var(--color-semantic-danger)",
    success: "var(--color-semantic-success)",
    warning: "var(--color-semantic-warning)",
    overlay: "var(--color-semantic-overlay)",
    interaction: {
      hover: "var(--color-semantic-interaction-hover)",
      active: "var(--color-semantic-interaction-active)",
      pressed: "var(--color-semantic-interaction-pressed)",
    },

    // Base colors (for direct use when needed)
    base: {
      white: "var(--color-base-white)",
      black: "var(--color-base-black)",
      neutral: {
        "50": "var(--color-base-neutral-50)",
        "100": "var(--color-base-neutral-100)",
        "200": "var(--color-base-neutral-200)",
        "300": "var(--color-base-neutral-300)",
        "400": "var(--color-base-neutral-400)",
        "500": "var(--color-base-neutral-500)",
        "600": "var(--color-base-neutral-600)",
        "700": "var(--color-base-neutral-700)",
        "800": "var(--color-base-neutral-800)",
        "900": "var(--color-base-neutral-900)",
      },
      brand: {
        "50": "var(--color-base-brand-50)",
        "100": "var(--color-base-brand-100)",
        "200": "var(--color-base-brand-200)",
        "300": "var(--color-base-brand-300)",
        "400": "var(--color-base-brand-400)",
        "500": "var(--color-base-brand-500)",
        "600": "var(--color-base-brand-600)",
        "700": "var(--color-base-brand-700)",
        "800": "var(--color-base-brand-800)",
        "900": "var(--color-base-brand-900)",
      },
      secondary: {
        "50": "var(--color-base-secondary-50)",
        "100": "var(--color-base-secondary-100)",
        "200": "var(--color-base-secondary-200)",
        "300": "var(--color-base-secondary-300)",
        "400": "var(--color-base-secondary-400)",
        "500": "var(--color-base-secondary-500)",
        "600": "var(--color-base-secondary-600)",
        "700": "var(--color-base-secondary-700)",
        "800": "var(--color-base-secondary-800)",
        "900": "var(--color-base-secondary-900)",
      },
      accent: {
        "50": "var(--color-base-accent-50)",
        "100": "var(--color-base-accent-100)",
        "200": "var(--color-base-accent-200)",
        "300": "var(--color-base-accent-300)",
        "400": "var(--color-base-accent-400)",
        "500": "var(--color-base-accent-500)",
        "600": "var(--color-base-accent-600)",
        "700": "var(--color-base-accent-700)",
        "800": "var(--color-base-accent-800)",
        "900": "var(--color-base-accent-900)",
      },
      support: {
        "50": "var(--color-base-support-50)",
        "100": "var(--color-base-support-100)",
        "200": "var(--color-base-support-200)",
        "300": "var(--color-base-support-300)",
        "400": "var(--color-base-support-400)",
        "500": "var(--color-base-support-500)",
        "600": "var(--color-base-support-600)",
        "700": "var(--color-base-support-700)",
        "800": "var(--color-base-support-800)",
        "900": "var(--color-base-support-900)",
      },
      success: {
        "50": "var(--color-base-success-50)",
        "100": "var(--color-base-success-100)",
        "200": "var(--color-base-success-200)",
        "300": "var(--color-base-success-300)",
        "400": "var(--color-base-success-400)",
        "500": "var(--color-base-success-500)",
        "600": "var(--color-base-success-600)",
        "700": "var(--color-base-success-700)",
        "800": "var(--color-base-success-800)",
        "900": "var(--color-base-success-900)",
      },
      warning: {
        "50": "var(--color-base-warning-50)",
        "100": "var(--color-base-warning-100)",
        "200": "var(--color-base-warning-200)",
        "300": "var(--color-base-warning-300)",
        "400": "var(--color-base-warning-400)",
        "500": "var(--color-base-warning-500)",
        "600": "var(--color-base-warning-600)",
        "700": "var(--color-base-warning-700)",
        "800": "var(--color-base-warning-800)",
        "900": "var(--color-base-warning-900)",
      },
      danger: {
        "50": "var(--color-base-danger-50)",
        "100": "var(--color-base-danger-100)",
        "200": "var(--color-base-danger-200)",
        "300": "var(--color-base-danger-300)",
        "400": "var(--color-base-danger-400)",
        "500": "var(--color-base-danger-500)",
        "600": "var(--color-base-danger-600)",
        "700": "var(--color-base-danger-700)",
        "800": "var(--color-base-danger-800)",
        "900": "var(--color-base-danger-900)",
      },
    },

    // Semantic colors - menu and interaction states
    semantic: {
      state: {
        selected: "var(--color-semantic-state-selected)",
        indeterminate: "var(--color-semantic-state-indeterminate)",
      },
      menu: {
        itemHover: "var(--color-semantic-menu-item-hover)",
        itemSelected: "var(--color-semantic-menu-item-selected)",
        separator: "var(--color-semantic-menu-separator)",
      },
    },

    // Component-specific tokens (brand controllable)
    components: {
      button: {
        borderRadius: "var(--color-components-button-border-radius)",
        primary: {
          background: "var(--color-components-button-primary-background)",
          backgroundHover:
            "var(--color-components-button-primary-background-hover)",
          backgroundActive:
            "var(--color-components-button-primary-background-active)",
          text: "var(--color-components-button-primary-text)",
          border: "var(--color-components-button-primary-border)",
        },
        secondary: {
          background: "var(--color-components-button-secondary-background)",
          backgroundHover:
            "var(--color-components-button-secondary-background-hover)",
          backgroundActive:
            "var(--color-components-button-secondary-background-active)",
          text: "var(--color-components-button-secondary-text)",
          border: "var(--color-components-button-secondary-border)",
        },
        ghost: {
          background: "var(--color-components-button-ghost-background)",
          backgroundHover:
            "var(--color-components-button-ghost-background-hover)",
          backgroundActive:
            "var(--color-components-button-ghost-background-active)",
          text: "var(--color-components-button-ghost-text)",
          border: "var(--color-components-button-ghost-border)",
        },
        danger: {
          background: "var(--color-components-button-danger-background)",
          backgroundHover:
            "var(--color-components-button-danger-background-hover)",
          backgroundActive:
            "var(--color-components-button-danger-background-active)",
          text: "var(--color-components-button-danger-text)",
          border: "var(--color-components-button-danger-border)",
        },
      },
      link: {
        default: {
          text: "var(--color-components-link-default-text)",
          textHover: "var(--color-components-link-default-text-hover)",
          textActive: "var(--color-components-link-default-text-active)",
          textVisited: "var(--color-components-link-default-text-visited)",
        },
        quiet: {
          text: "var(--color-components-link-quiet-text)",
          textHover: "var(--color-components-link-quiet-text-hover)",
          textActive: "var(--color-components-link-quiet-text-active)",
        },
        emphasized: {
          text: "var(--color-components-link-emphasized-text)",
          textHover: "var(--color-components-link-emphasized-text-hover)",
          background: "var(--color-components-link-emphasized-background)",
          backgroundHover:
            "var(--color-components-link-emphasized-background-hover)",
          backgroundActive:
            "var(--color-components-link-emphasized-background-active)",
          borderRadius: "var(--color-components-link-emphasized-border-radius)",
        },
      },
      breadcrumbs: {
        link: {
          text: "var(--color-components-breadcrumbs-link-text)",
          textHover: "var(--color-components-breadcrumbs-link-text-hover)",
          textActive: "var(--color-components-breadcrumbs-link-text-active)",
          backgroundHover:
            "var(--color-components-breadcrumbs-link-background-hover)",
          backgroundActive:
            "var(--color-components-breadcrumbs-link-background-active)",
          borderRadius:
            "var(--color-components-breadcrumbs-link-border-radius)",
        },
        current: {
          text: "var(--color-components-breadcrumbs-current-text)",
        },
        separator: {
          text: "var(--color-components-breadcrumbs-separator-text)",
        },
        ellipsis: {
          text: "var(--color-components-breadcrumbs-ellipsis-text)",
          textHover: "var(--color-components-breadcrumbs-ellipsis-text-hover)",
          backgroundHover:
            "var(--color-components-breadcrumbs-ellipsis-background-hover)",
          borderRadius:
            "var(--color-components-breadcrumbs-ellipsis-border-radius)",
        },
      },
      table: {
        border: "var(--color-components-table-border)",
        borderRadius: "var(--color-components-table-border-radius)",
        header: {
          background: "var(--color-components-table-header-background)",
          text: "var(--color-components-table-header-text)",
          sortIcon: "var(--color-components-table-header-sort-icon)",
          sortIconActive:
            "var(--color-components-table-header-sort-icon-active)",
        },
        row: {
          background: "var(--color-components-table-row-background)",
          backgroundHover: "var(--color-components-table-row-background-hover)",
          backgroundSelected:
            "var(--color-components-table-row-background-selected)",
          backgroundStriped:
            "var(--color-components-table-row-background-striped)",
        },
        cell: {
          text: "var(--color-components-table-cell-text)",
          textSecondary: "var(--color-components-table-cell-text-secondary)",
        },
      },
    },
  },
  space: {
    // Numeric access (clean)
    0: "var(--space-0)",
    1: "var(--space-1)",
    2: "var(--space-2)",
    3: "var(--space-3)",
    4: "var(--space-4)",
    5: "var(--space-5)",
    6: "var(--space-6)",
    7: "var(--space-7)",
    8: "var(--space-8)",
    9: "var(--space-9)",
    10: "var(--space-10)",

    // Semantic access (developer-friendly)
    none: "var(--space-none)",
    xs: "var(--space-xs)",
    sm: "var(--space-sm)",
    md: "var(--space-md)",
    lg: "var(--space-lg)",
    xl: "var(--space-xl)",
    "2xl": "var(--space-2xl)",
    "3xl": "var(--space-3xl)",
  },
  radius: {
    none: "var(--radius-none)",
    sm: "var(--radius-sm)",
    md: "var(--radius-md)",
    lg: "var(--radius-lg)",
    xl: "var(--radius-xl)",
    full: "var(--radius-full)",
  },
  elevation: {
    // Numeric access (clean)
    0: "var(--elevation-0)",
    1: "var(--elevation-1)",
    2: "var(--elevation-2)",
    3: "var(--elevation-3)",

    // Semantic access (developer-friendly)
    none: "var(--elevation-none)",
    sm: "var(--elevation-sm)",
    md: "var(--elevation-md)",
    lg: "var(--elevation-lg)",
  },
  font: {
    family: {
      sans: "var(--font-family-sans)",
      mono: "var(--font-family-mono)",
    },
    size: {
      xs: "var(--font-size-xs)",
      sm: "var(--font-size-sm)",
      md: "var(--font-size-md)",
      lg: "var(--font-size-lg)",
      xl: "var(--font-size-xl)",
      "2xl": "var(--font-size-2xl)",
      "3xl": "var(--font-size-3xl)",
    },
    weight: {
      regular: "var(--font-weight-regular)",
      medium: "var(--font-weight-medium)",
      semibold: "var(--font-weight-semibold)",
      bold: "var(--font-weight-bold)",
    },
  },
  animation: {
    duration: {
      instant: "var(--animation-duration-instant)",
      fast: "var(--animation-duration-fast)",
      normal: "var(--animation-duration-normal)",
      slow: "var(--animation-duration-slow)",
      tooltip: "var(--animation-duration-tooltip)",
    },
    easing: {
      "ease-in": "var(--animation-easing-ease-in)",
      "ease-out": "var(--animation-easing-ease-out)",
      "ease-in-out": "var(--animation-easing-ease-in-out)",
    },
  },
  icon: {
    size: {
      xs: "var(--icon-size-xs)",
      sm: "var(--icon-size-sm)",
      md: "var(--icon-size-md)",
      lg: "var(--icon-size-lg)",
      xl: "var(--icon-size-xl)",
    },
    close: {
      sm: "var(--icon-close-sm)",
      md: "var(--icon-close-md)",
      lg: "var(--icon-close-lg)",
    },
  },
  size: {
    control: {
      checkbox: {
        sm: "var(--size-control-checkbox-sm)",
        md: "var(--size-control-checkbox-md)",
        lg: "var(--size-control-checkbox-lg)",
      },
      radio: {
        sm: "var(--size-control-radio-sm)",
        md: "var(--size-control-radio-md)",
        lg: "var(--size-control-radio-lg)",
      },
    },
    height: {
      select: {
        sm: "var(--size-height-select-sm)",
        md: "var(--size-height-select-md)",
        lg: "var(--size-height-select-lg)",
      },
    },
  },
  zIndex: {
    dropdown: "var(--zIndex-dropdown)",
    menu: "var(--zIndex-menu)",
    popover: "var(--zIndex-popover)",
    modal: "var(--zIndex-modal)",
  },
  opacity: {
    disabled: "var(--opacity-disabled)",
    muted: "var(--opacity-muted)",
    secondary: "var(--opacity-secondary)",
    overlay: "var(--opacity-overlay)",
  },
} as const;

// Type for the theme
export type Theme = typeof theme;
