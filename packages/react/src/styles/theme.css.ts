/**
 * Theme integration with Style Dictionary generated tokens
 * This file defines CSS variables that correspond to the tokens generated by Style Dictionary
 * 
 * IMPORTANT: These CSS variables are populated by @ras-ui/tokens CSS.
 * The actual values come from Style Dictionary and switch based on data-theme attribute.
 */

// Theme object using CSS custom properties from Style Dictionary
export const theme = {
  color: {
    // Semantic colors (theme-aware via CSS custom properties)
    surface: {
      base: 'var(--color-semantic-surface-base)',
      raised: 'var(--color-semantic-surface-raised)',
      float: 'var(--color-semantic-surface-float)',
    },
    text: {
      primary: 'var(--color-semantic-text-primary)',
      secondary: 'var(--color-semantic-text-secondary)',
      onBrand: 'var(--color-semantic-text-on-brand)',
    },
    border: {
      default: 'var(--color-semantic-border-default)',
      focus: 'var(--color-semantic-border-focus)',
    },
    brand: {
      primary: 'var(--color-brand-primary)',
    },
    danger: 'var(--color-semantic-danger)',
    success: 'var(--color-semantic-success)',
    warning: 'var(--color-semantic-warning)',
    overlay: 'var(--color-semantic-overlay)',
    
    // Base colors (for direct use when needed)
    base: {
      white: 'var(--color-base-white)',
      black: 'var(--color-base-black)',
      neutral: {
        '50': 'var(--color-base-neutral-50)',
        '100': 'var(--color-base-neutral-100)',
        '200': 'var(--color-base-neutral-200)',
        '300': 'var(--color-base-neutral-300)',
        '400': 'var(--color-base-neutral-400)',
        '500': 'var(--color-base-neutral-500)',
        '600': 'var(--color-base-neutral-600)',
        '700': 'var(--color-base-neutral-700)',
        '800': 'var(--color-base-neutral-800)',
        '900': 'var(--color-base-neutral-900)',
      },
      brand: {
        '50': 'var(--color-base-brand-50)',
        '100': 'var(--color-base-brand-100)',
        '200': 'var(--color-base-brand-200)',
        '300': 'var(--color-base-brand-300)',
        '400': 'var(--color-base-brand-400)',
        '500': 'var(--color-base-brand-500)',
        '600': 'var(--color-base-brand-600)',
        '700': 'var(--color-base-brand-700)',
        '800': 'var(--color-base-brand-800)',
        '900': 'var(--color-base-brand-900)',
      },
      secondary: {
        '50': 'var(--color-base-secondary-50)',
        '100': 'var(--color-base-secondary-100)',
        '200': 'var(--color-base-secondary-200)',
        '300': 'var(--color-base-secondary-300)',
        '400': 'var(--color-base-secondary-400)',
        '500': 'var(--color-base-secondary-500)',
        '600': 'var(--color-base-secondary-600)',
        '700': 'var(--color-base-secondary-700)',
        '800': 'var(--color-base-secondary-800)',
        '900': 'var(--color-base-secondary-900)',
      },
      accent: {
        '50': 'var(--color-base-accent-50)',
        '100': 'var(--color-base-accent-100)',
        '200': 'var(--color-base-accent-200)',
        '300': 'var(--color-base-accent-300)',
        '400': 'var(--color-base-accent-400)',
        '500': 'var(--color-base-accent-500)',
        '600': 'var(--color-base-accent-600)',
        '700': 'var(--color-base-accent-700)',
        '800': 'var(--color-base-accent-800)',
        '900': 'var(--color-base-accent-900)',
      },
      support: {
        '50': 'var(--color-base-support-50)',
        '100': 'var(--color-base-support-100)',
        '200': 'var(--color-base-support-200)',
        '300': 'var(--color-base-support-300)',
        '400': 'var(--color-base-support-400)',
        '500': 'var(--color-base-support-500)',
        '600': 'var(--color-base-support-600)',
        '700': 'var(--color-base-support-700)',
        '800': 'var(--color-base-support-800)',
        '900': 'var(--color-base-support-900)',
      },
      success: {
        '50': 'var(--color-base-success-50)',
        '100': 'var(--color-base-success-100)',
        '200': 'var(--color-base-success-200)',
        '300': 'var(--color-base-success-300)',
        '400': 'var(--color-base-success-400)',
        '500': 'var(--color-base-success-500)',
        '600': 'var(--color-base-success-600)',
        '700': 'var(--color-base-success-700)',
        '800': 'var(--color-base-success-800)',
        '900': 'var(--color-base-success-900)',
      },
      warning: {
        '50': 'var(--color-base-warning-50)',
        '100': 'var(--color-base-warning-100)',
        '200': 'var(--color-base-warning-200)',
        '300': 'var(--color-base-warning-300)',
        '400': 'var(--color-base-warning-400)',
        '500': 'var(--color-base-warning-500)',
        '600': 'var(--color-base-warning-600)',
        '700': 'var(--color-base-warning-700)',
        '800': 'var(--color-base-warning-800)',
        '900': 'var(--color-base-warning-900)',
      },
      danger: {
        '50': 'var(--color-base-danger-50)',
        '100': 'var(--color-base-danger-100)',
        '200': 'var(--color-base-danger-200)',
        '300': 'var(--color-base-danger-300)',
        '400': 'var(--color-base-danger-400)',
        '500': 'var(--color-base-danger-500)',
        '600': 'var(--color-base-danger-600)',
        '700': 'var(--color-base-danger-700)',
        '800': 'var(--color-base-danger-800)',
        '900': 'var(--color-base-danger-900)',
      },
    },
    
    // Component-specific tokens (brand controllable)
    components: {
      button: {
        primary: {
          background: 'var(--color-components-button-primary-background)',
          backgroundHover: 'var(--color-components-button-primary-background-hover)',
          backgroundActive: 'var(--color-components-button-primary-background-active)',
          text: 'var(--color-components-button-primary-text)',
          border: 'var(--color-components-button-primary-border)',
        },
        secondary: {
          background: 'var(--color-components-button-secondary-background)',
          backgroundHover: 'var(--color-components-button-secondary-background-hover)',
          backgroundActive: 'var(--color-components-button-secondary-background-active)',
          text: 'var(--color-components-button-secondary-text)',
          border: 'var(--color-components-button-secondary-border)',
        },
        ghost: {
          background: 'var(--color-components-button-ghost-background)',
          backgroundHover: 'var(--color-components-button-ghost-background-hover)',
          backgroundActive: 'var(--color-components-button-ghost-background-active)',
          text: 'var(--color-components-button-ghost-text)',
          border: 'var(--color-components-button-ghost-border)',
        },
        danger: {
          background: 'var(--color-components-button-danger-background)',
          backgroundHover: 'var(--color-components-button-danger-background-hover)',
          backgroundActive: 'var(--color-components-button-danger-background-active)',
          text: 'var(--color-components-button-danger-text)',
          border: 'var(--color-components-button-danger-border)',
        },
      },
    },
  },
  space: {
    '0': 'var(--space-0)',
    '1': 'var(--space-1)',
    '2': 'var(--space-2)',
    '3': 'var(--space-3)',
    '4': 'var(--space-4)',
    '5': 'var(--space-5)',
    '6': 'var(--space-6)',
    '7': 'var(--space-7)',
    '8': 'var(--space-8)',
    '9': 'var(--space-9)',
    '10': 'var(--space-10)',
  },
  radius: {
    none: 'var(--radius-none)',
    sm: 'var(--radius-sm)',
    md: 'var(--radius-md)',
    lg: 'var(--radius-lg)',
    xl: 'var(--radius-xl)',
    full: 'var(--radius-full)',
  },
  elevation: {
    '0': 'var(--elevation-0)',
    '1': 'var(--elevation-1)',
    '2': 'var(--elevation-2)',
    '3': 'var(--elevation-3)',
  },
  font: {
    family: {
      sans: 'var(--font-family-sans)',
      mono: 'var(--font-family-mono)',
    },
    size: {
      xs: 'var(--font-size-xs)',
      sm: 'var(--font-size-sm)',
      md: 'var(--font-size-md)',
      lg: 'var(--font-size-lg)',
      xl: 'var(--font-size-xl)',
      '2xl': 'var(--font-size-2xl)',
      '3xl': 'var(--font-size-3xl)',
    },
    weight: {
      regular: 'var(--font-weight-regular)',
      medium: 'var(--font-weight-medium)',
      semibold: 'var(--font-weight-semibold)',
      bold: 'var(--font-weight-bold)',
    },
  },
} as const;

// Type for the theme
export type Theme = typeof theme;