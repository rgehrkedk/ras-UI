name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality-gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.12.1

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: TypeScript compilation
        run: pnpm type-check

      - name: ESLint + jsx-a11y
        run: pnpm lint

      - name: Build packages
        run: pnpm build

      - name: Unit tests
        run: |
          # Run tests where present across workspaces
          pnpm -r --if-present test:run || pnpm -r --if-present test

      - name: Bundle size check
        run: pnpm run size-check

  # Visual regression tests disabled until implemented
  # visual-regression:
  #   name: Visual Regression Tests
  #   runs-on: ubuntu-latest
  #   needs: quality-gates
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'
  #     - name: Setup pnpm
  #       uses: pnpm/action-setup@v2
  #       with:
  #         version: 8.12.1
  #     - name: Install dependencies
  #       run: pnpm install --frozen-lockfile
  #     - name: Build Storybook
  #       run: pnpm build-storybook
  #     - name: Run visual regression tests
  #       run: pnpm test:visual

  # Accessibility audit disabled until implemented
  # accessibility-audit:
  #   name: Accessibility Audit
  #   runs-on: ubuntu-latest
  #   needs: quality-gates
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'
  #     - name: Setup pnpm
  #       uses: pnpm/action-setup@v2
  #       with:
  #         version: 8.12.1
  #     - name: Install dependencies
  #       run: pnpm install --frozen-lockfile
  #     - name: Build Storybook
  #       run: pnpm build-storybook
  #     - name: Run accessibility tests
  #       run: pnpm test:a11y

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [quality-gates]
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.12.1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Storybook
        run: pnpm build-storybook

      - name: Deploy to staging
        run: echo "Deploy to staging environment"
        # Add actual deployment steps here

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [quality-gates, visual-regression, accessibility-audit]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.12.1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm release
          commit: "chore: release packages"
          title: "chore: release packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
